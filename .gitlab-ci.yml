variables:
  GIT_SUBMODULE_STRATEGY: recursive
  GIT_STRATEGY: clone   # Only enable this line to fix problems with multiple branches in submodules
  
stages:
  - build
  - test
  - deploy
 
build_linux:
  stage: build
  except: 
  - /latest/
  tags:
  - ubuntu2004
  - vrtogether
  before_script:
    - ./scripts/install-3rdparty-ubuntu2004.sh
  script:
    - mkdir -p installed/lib
    - export LD_LIBRARY_PATH="`pwd`/installed/lib:$LD_LIBRARY_PATH"
    - instdir=`cd installed ; pwd`
    - rm -rf build
    - mkdir build
    - cd build
    - cmake .. -DCMAKE_INSTALL_PREFIX=$instdir
    - make
    - make test
    - make install
    - cd ..
    - tar --directory installed -cvaf cwipc_ubuntu2004_$CI_COMMIT_TAG.tgz .
    - touch successful.tmp
  after_script:
    - if [ ! -e successful.tmp ]; then cp build/Testing/Temporary/LastTest.log ctest_log_ubuntu2004.log; fi
  artifacts:
    when: always
    paths:
      - cwipc_ubuntu2004_$CI_COMMIT_TAG.tgz
      - ctest_log_ubuntu2004.log
      
build_osx:
  stage: build
  except: 
  - /latest/
  tags:
  - osx1015
  - vrtogether
  before_script:
    - ./scripts/install-3rdparty-osx1015.sh
  script:
    - mkdir -p installed/lib
    - instdir=`cd installed ; pwd`
    - ln -Ffs `pwd`/installed/lib ~/lib # Nasty hack: OSX SIP doesn't allow setting DYLD_LIBRARY_PATH anymore
    - rm -rf build
    - mkdir build
    - cd build
    - cmake .. -DCMAKE_INSTALL_PREFIX=$instdir
    - make
    - make test
    - make install 
    - cd ..
    - tar --directory installed -z -cvf cwipc_osx1015_$CI_COMMIT_TAG.tgz .
    - touch successful.tmp
  after_script:
    - if [ ! -e successful.tmp ]; then cp build/Testing/Temporary/LastTest.log ctest_log_osx1015.log; fi
  artifacts:
    when: always
    paths:
      - cwipc_osx1015_$CI_COMMIT_TAG.tgz
      - ctest_log_osx1015.log
      
build_win:
  stage: build
  except: 
  - /latest/
  tags:
  - win10
  - vrtogether
  variables:
    OPENGL_IS_BROKEN: "true" # See issue #19
  before_script:
    - ./scripts/install-3rdparty-win1064.sh
  script:
    - mkdir -p installed/bin
    - export PATH="`pwd`/installed/bin:$PATH"
    - instdir=`cd installed ; pwd`
    - instdir=`cygpath -w "$instdir"`
    - rm -rf build
    - mkdir build
    - cd build
    - cmake .. -G "Visual Studio 16 2019" -DCMAKE_INSTALL_PREFIX="$instdir" -DJPEG_Turbo_ROOT="C:/libjpeg-turbo64" -DOpenCV_DIR="C:/OpenCV-4.5.5/build"
    - cmake --build . --config Release
    - cmake --build . --config Release --target RUN_TESTS
    - cmake --build . --config Release --target INSTALL
    - cd ..
    - zip -r cwipc_win1064_${CI_COMMIT_TAG}.zip installed
    - touch successful.tmp
  after_script:
    - if [ ! -e successful.tmp ]; then cp build/Testing/Temporary/LastTest.log ctest_log_win1064.log; fi
  artifacts:
    when: always
    paths:
      - cwipc_win1064_$CI_COMMIT_TAG.zip
      - ctest_log_win1064.log
      
deploy_all:
  stage: deploy
  tags:
  - linux
  - vrtogether
  only: 
  - tags
  except: 
  - /latest/
  dependencies: 
  - build_linux
  - build_osx
  - build_win
  before_script:
  - apt-get update
  - apt-get install -y python3-pip
  - mkdir deployment-helpers
  - cd deployment-helpers
  - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.com/VRTogether_EU/Deployment/Deployment.git
  - python3 -m pip install 'scikit-learn>=0.23,!=0.24.0,!=0.24.1'
  - python3 -m pip install -r Deployment/scripts/requirements.txt
  - cd ..
  script:
    - mkdir deliverables
    - mv cwipc_ubuntu2004_$CI_COMMIT_TAG.tgz cwipc_osx1015_$CI_COMMIT_TAG.tgz cwipc_win1064_$CI_COMMIT_TAG.zip deliverables
    - python3 deployment-helpers/Deployment/scripts/addReleaseToGitLab --cicd --notag --package_version `deployment-helpers/Deployment/scripts/mkpackageversion.sh` cwipc_ubuntu2004_$CI_COMMIT_TAG.tgz cwipc_osx1015_$CI_COMMIT_TAG.tgz cwipc_win1064_$CI_COMMIT_TAG.zip
      
deploy_all_untagged:
  stage: deploy
  tags:
  - linux
  - vrtogether
  except: 
  - tags
  - /latest/
  dependencies: 
  - build_linux
  - build_osx
  - build_win
  before_script:
  - apt-get update
  - apt-get install -y python3-pip
  - mkdir deployment-helpers
  - cd deployment-helpers
  - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.com/VRTogether_EU/Deployment/Deployment.git
  - python3 -m pip install 'scikit-learn>=0.23,!=0.24.0,!=0.24.1'
  - python3 -m pip install -r Deployment/scripts/requirements.txt
  - cd ..
  script:
    - mkdir deliverables
    - mv cwipc_ubuntu2004_$CI_COMMIT_TAG.tgz cwipc_osx1015_$CI_COMMIT_TAG.tgz cwipc_win1064_$CI_COMMIT_TAG.zip deliverables
    - python3 deployment-helpers/Deployment/scripts/addReleaseToGitLab --cicd --tag_name latest --release_name latest --deleterelease || true
    - python3 deployment-helpers/Deployment/scripts/addReleaseToGitLab --cicd --tag_name latest --release_name latest --deletetag || true
    - python3 deployment-helpers/Deployment/scripts/addReleaseToGitLab --cicd --tag_name latest --release_name latest --branch_to_tag "$CI_COMMIT_REF_NAME" --package_version `deployment-helpers/Deployment/scripts/mkpackageversion.sh` cwipc_ubuntu2004_$CI_COMMIT_TAG.tgz cwipc_osx1015_$CI_COMMIT_TAG.tgz cwipc_win1064_$CI_COMMIT_TAG.zip
